from jobs.job_calculate_precision import run_job, db_handle
from Tests import DB_Mocker as mocker
from db import models
import unittest
from decimal import Decimal


class TestPrecisionJob(unittest.TestCase):
    @classmethod
    def setUpClass(self):
        db_handle.session = mocker.session
        run_job()

    def test_irrelevant_tables(self):
        self.assertEqual(len(mocker.session.query(models.Cf).all()),0)
        self.assertEqual(len(mocker.session.query(models.Constant).all()),0)
        self.assertEqual(len(mocker.session.query(models.CfConstantConnection).all()),0)
        self.assertEqual(len(mocker.session.query(models.ContinuedFractionRelation).all()),0)
        self.assertEqual(len(mocker.session.query(models.CfFamily).all()),0)


    def test_sanity(self):
        precisions = mocker.session.query(models.CfPrecision).all()
        self.assertEqual(len(precisions),1)
        
        precision = precisions[0]

        self.assertEqual(precision.cf_id,2)
        self.assertEqual(precision.depth,500)
        self.assertEqual(precision.precision,209) 
        self.assertEqual(precision.value,Decimal('1.6180339887498948482045868343656381177203091798057628621354486227052604628189024497072072041893911374847540880753868917521266338622235369317931800607667263544333890865959395829056383226613199282902678806752087581049180709310827691617115885475799050729418419309211491682032783919692352824644693704471299896770748515558789821965865541028763669221439479733722803122296077951262531606349334187161694392139874070215068004193560120149388384458681145644000141834813690361832205431163093127513437154260489048774745557513062083824848495550602668449651349009235594205087317901836391033308611986200961310197175342522550075385450814329301573745328874019269716560250749386252580993564860921852760809313008862596280252660695563404531781978512019340088889544761280607472339721776466624476853285396311630348693858363647257330870260863733100262716563858009135335069833109455680120061542706063892780651040718689816046407547390225659945943332954223365590753679680638054736958693152380843677002166297126132595406460093568303160704644090238304732546152575166010090645163987900310826192268534660429415260365655414149910165077641573504796492164102997223483633561799516221501624742952644113491914751216474289048350386432033986385030296567840216644555385972989306408695273116825360418842774510227502431295660234324560724713186259957173828869901296445772586073215051519801863958209097958400678352233571479337864026332231258937535480045251786674557273223954649811456705190975706768594983713737439162501001939805941362143176406127812568174408229422972689111831457364716085090050653989724144289335493539932651966423056182001976291660904783361663443045081528715865243278575979367719061676908551265987777867831622785873374544595715537617540590203385979525686035012317121617368349490009113873023187087986717561114822524109400565954807003591976218654033180982376569120838181143328067148639878447276547655856996443317996364634291065747139530569706728645493921263671192591091536609076118241339920036952441584045424046227428703373848659'))
        self.assertEqual(precision.previous_calc,[225591516161936330872512695036072072046011324913758190588638866418474627738686883405015987052796968498626, 139423224561697880139724382870407283950070256587697307264108962948325571622863290691557658876222521294125, 365014740723634211012237077906479355996081581501455497852747829366800199361550174096573645929019489792751, 225591516161936330872512695036072072046011324913758190588638866418474627738686883405015987052796968498626])


if __name__ == '__main__':
    unittest.main()